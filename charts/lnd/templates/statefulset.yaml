apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lnd.fullname" . }}
  labels:
    {{- include "lnd.labels" . | nindent 4 }}
    app: {{ template "lnd.name" . }}
spec:
  selector:
    matchLabels:
      {{- include "lnd.selectorLabels" . | nindent 6 }}
  serviceName: {{ template "lnd.fullname" . }}
  replicas: 1
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "lnd.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lnd.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: lnd-init
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        command:
        - "/bin/bash"
        - "-c"
        args:
        - >
          if [[ -f /data/data/chain/bitcoin/mainnet/wallet.db ]];
          then
            exit 0;
          else
            /usr/bin/nohup /bin/lnd --lnddir=/data --datadir=/data/data --bitcoin.active --bitcoin.mainnet --btcd.rpcuser=meep --btcd.rpcpass=meep;
            until test -f /data/data/chain/bitcoin/mainnet/wallet.db;
              do echo "Waiting for wallet creation. Exec into this pod and run lncli --lnddir=/data create";
              sleep 10;
            done
          fi
        volumeMounts:
          - mountPath: /data
            name: lnd
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.debug }}
          image: centos:8
          command: ['sleep']
          args: ['infinity']
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--lnddir=/data"
            - "--datadir=/data/data"
            - "--alias={{ .Values.config.alias }}"
            - "--debuglevel=info"
            - "--maxpendingchannels=4"
            - "--stagger-initial-reconnect"
            - "--accept-keysend"
            - "--allow-circular-route"
            - "--minchansize={{ .Values.bitcoin.minChanSize }}"
            - "--listen=0.0.0.0:9735"
            - "--rpclisten=0.0.0.0:10009"
            - "--routing.strictgraphpruning"
            {{- if .Values.config.restListen }}
            - "--restlisten={{ .Values.config.restListen }}"
            - "--restcors=*"
            {{- end }}
            - "--accept-amp"
            {{- if .Values.config.externalIp }}
            - "--externalip={{ .Values.config.externalIp }}"
            {{- end }}
            {{- if .Values.config.tlsExtraIp }}
            {{- range .Values.config.tlsExtraIp }}
            - "--tlsextraip={{ . }}"
            {{- end }}
            {{- end }}
            {{- if .Values.config.tlsExtraDomain }}
            {{- range .Values.config.tlsExtraDomain }}
            - "--tlsextradomain={{ . }}"
            {{- end }}
            {{- end }}
            - "--bitcoin.active"
            - "--bitcoin.node=bitcoind"
            - "--bitcoin.mainnet"
            - "--bitcoin.defaultchanconfs=2"
            - "--bitcoin.minhtlc=1"
            - "--bitcoin.basefee={{ .Values.bitcoin.basefee }}"
            - "--bitcoin.feerate={{ .Values.bitcoin.feerate }}"
            - "--bitcoind.rpcuser={{ .Values.bitcoind.rpcuser }}"
            - "--bitcoind.rpcpass={{ .Values.bitcoind.rpcpass }}"
            - "--bitcoind.rpchost={{ .Values.bitcoind.rpchost }}"
            - "--bitcoind.zmqpubrawblock=tcp://{{ .Values.bitcoind.rpchost }}:{{ .Values.bitcoind.zmqpubrawblockport }}"
            - "--bitcoind.zmqpubrawtx=tcp://{{ .Values.bitcoind.rpchost }}:{{ .Values.bitcoind.zmqpubrawtxport }}"
            - "--bitcoind.estimatemode={{ default "CONSERVATIVE" .Values.bitcoind.estimatemode }}"
            - "--protocol.wumbo-channels"
            # - "--wtclient.active"
            - "--db.bolt.auto-compact"
            {{- if .Values.tor.enabled }}
            - "--tor.skip-proxy-for-clearnet-targets"
            - "--tor.active"
            - "--tor.v3"
            # - "--tor.streamisolation"
            - "--tor.password={{ .Values.tor.password }}"
            - "--tor.socks={{ .Values.tor.sockshost }}:{{ .Values.tor.socksport }}"
            - "--tor.control={{ .Values.tor.controlhost }}:{{ .Values.tor.controlport }}"
            {{- end }}
            {{- end }}
          lifecycle:
            postStart:
              exec:
                command:
                - /bin/sh
                - -c
                - "until lncli --lnddir=/data unlock --stdin < /data/.walletpass; do echo Waiting for wallet; sleep 5; done"
          volumeMounts:
          - mountPath: /data
            name: lnd
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "lnd.fullname" . }}
      spec:
        accessModes:
          - ReadWriteOnce
        {{- if .Values.config.persistence.storageClassName }}
        storageClassName: {{ .Values.config.persistence.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.config.persistence.size }}
